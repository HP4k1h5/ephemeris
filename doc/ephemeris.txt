*ephemeris.txt*	a diary plugin for vim
HP4k1h5 <robertwalks@gmail.com>                                    *ephemeris*

==============================================================================
CONTENTS                                                  *ephemeris-contents*
  1. Introduction............................................|ephemeris-intro|
  2. Configuration..........................................|ephemeris-config|
  3. Commands.............................................|ephemeris-commands|

==============================================================================
INTRODUCTION                                                 *ephemeris-intro*

ephemeris is a diary and calendar extension plugin for vim. It provides a
collection of functions and commands that can be used to create, edit, and
curate diary/log entries.

The diary is defined by the directories and files found recursively under the
directory set in the global variable |g:ephemeris_diary|. ephemeris does not
rely on any external programs and does not interfere with any external
program, such as cal, etc. This plugin works best when the directory structure
of |g:ephemeris_diary| is YYYY/MM/DD.md, as follows:
>
  â”œâ”€â”€ 2019
  â”‚Â Â  â””â”€â”€ 09
  â”‚Â Â      â”œâ”€â”€ 16.md
  â”‚Â Â  â””â”€â”€ 12
  â”‚Â Â      â””â”€â”€ 20.md
  â”œâ”€â”€ 2020
  â”‚Â Â  â””â”€â”€ 05
  â”‚Â Â      â”œâ”€â”€ 01.md
  â”‚Â Â      â”œâ”€â”€ 04.md
<
This tree structure is provided by default by ephemeris functions. This plugin
will only provide limited functionality if the directory structure does not
include a date-aligned directory structure as outlined above.

HELP
          see 'README.md' and 'doc/ephemeris.txt'

THANKS
          mattn <https://github.com/mattn/calendar-vim>
for a great plugin and the inspiration to make some helper functions

          junegunn <https://github.com/junegunn/vader.vim
for the testing suite


==============================================================================
CONFIGURATION                                               *ephemeris-config*

                                                           *g:ephemeris_diary*
Directory path for diary. All functions that rely on this variable/directory
are dependent on it having the following directory structure:
>
    â”œâ”€â”€ 2019
    â”‚   â””â”€â”€ 09
    â”‚       â”œâ”€â”€ 16.md
    â”‚   â””â”€â”€ 12
    â”‚       â””â”€â”€ 20.md
    â”œâ”€â”€ 2020
    â”‚   â””â”€â”€ 05
    â”‚       â”œâ”€â”€ 01.md
    â”‚       â”œâ”€â”€ 04.md
<
files that do not conform to the `g:ephemeris_diary/YYYY/MM/DD.md` format,
will not be available to date reliant functions such as
|ephemeris#lst#copy_todos()|

Default: { No default! } must be set by user

Example: `:let g:ephemeris_diary = '~/diary'`

                                                           *g:ephemeris_todos*
marker to indicate the beginning and end of the list of task items to be
copied over to current day's diary entry. see |EphemerisCopyTodos()|. Also
serves as a delimiter for |EphemerisFilterTasks()|

Default: `TODOs`

Example: `:let g:ephemeris_todos = '===TASK LIST==='`

                                                     *g:ephemeris_toggle_list*

Accepts a list of strings that g:ephemeris_toggle_block will iterate over.
Mind that not all of these will be properly interpreted by standard markdown
interpreters, which may only accept, if they accept them, the default values.
Example: `:let g:ephemeris_toggle_list = 'ðŸŒ‘ðŸŒ˜ðŸŒ—ðŸŒ–ðŸŒ•'`

Example: `:let g:ephemeris_toggle_list = '.oO'`

Default: `' x`, when split produces: `- [ ]` and `- [x]`

==============================================================================
COMMANDS                                                  *ephemeris-commands*

:EphemerisCreateIndex                                  *:EphemerisCreateIndex*
  Create markdown diary index of all '.md' files found under the
  |g:ephemeris_diary| directory, and go to vertical split.  Calls
  |ephemeris#ind#create_index()|

:EphemerisGotoIndex                                      *:EphemerisGotoIndex*
  Open diary index in a vertical split or focus diary index buffer. Index is
  found at |g:ephemeris_diary|/index.md. Calls |ephemeris#ind#goto_index()|

:EphemerisGotoToday                                      *:EphemerisGotoToday*
  Create a vertical split with today's diary entry.

:EphemerisCopyTodos                                      *:EphemerisCopyTodos*
  Copy TODOs from last set of TODOs going back up to 2 years. Your
  |g:ephemeris_diary| directory must be organized in a `.../YYYY/MM/DD.md`
  hierarchy, in order for this function to know which set of TODOs are _most
  recent_. TODOs are defined by the string set in |g:ephemeris_todos|. Default
  is 'TODOs'. Everything below that marker, until 2 consecutive newlines, an
  incomplete task, or a subsequent g:ephemeris_todos marker, is copied to the
  current day's diary entry. It will open today's diary entry in a split.
  Calls |ephemeris#lst#copy_todos()|

:EphemerisFilterTasks [archive] [summary]              *:EphemerisFilterTasks*
  Delete completed tasks, e.g. list items containing `- [x]`, and all
  associated subblocks until the next incomplete task, e.g. list items
  containing `- [ ]`, a |g:ephemeris_todos| marker, 2 newlines, or EOF. See
  example in |ephemeris#lst#filter_tasks()|. The first argument [archive] is a
  boolean which determines whether the filtered tasks are moved to
  'g:ephemeris_diary'/.cache/archive.md. Default is 0. The second argument
  [summary] is a boolean. If true this function will print a summary of
  filtered/remaining tasks at the bottom of the buffer. Default is 0.

:EphemerisToggleTask                                    *:EphemerisToggleTask*
  Toggles the state of a task between e.g.
>
    - [ ] incomplete
      and
    - [x] complete
<
  when the cursor is on a line containing a task. Will iterate over the list
  of strings set at |g:ephemeris_toggle_list|. If cursor is on a line not
  beginning a string provided to toggle list, a new list item will be
  instantiated.

:EphemerisFold                                                *:EphemerisFold*
  Fold file by line-separated paragraphs, works well with lists if you leave a
  space between list blocks. Set 'foldlevel' to 0 or type `zM` to fold all,
  type `zR` to open all folds.


vim:tw=78:ts=8:ft=help:norl:
