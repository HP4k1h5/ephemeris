~ Test copy_todos

" copy_todos copies tasks from the last diary entry where the
" task marker 'g:ephemeris_todos' is found. the function finds the most recent
" `g:ephemeris_todos` marker in the `g:ephemeris_diary` directory. The function
" stops copying when it finds `g:ephemeris_todos` marker, two consecutive
" newlines, or EOF. It should copy all todos blocks. 

=====================
# test copy_todos
" setup
Execute (make test dir and add a test buffer from a date in the past):
  let g:ephemeris_diary = '.tst_dir'
  let g:cur_buf = bufnr('%')
  " create dir
  call ephemeris#fs#create_fp(g:ephemeris_diary.'/2020/01/')
  Assert isdirectory(g:ephemeris_diary)
  AssertEqual g:cur_buf, bufnr('%')

Execute (add TODOs to buffer):
  execute 'normal! ipre marker#TODOs- [ ] task 1'
  execute 'silent! w '.g:ephemeris_diary.'/2020/01/01.md' 
  Assert filereadable(g:ephemeris_diary.'/2020/01/01.md')

Expect (the TODOs to be in the buffer):
  pre marker
  #TODOs
  - [ ] task 1

Execute (copy_todos without a g:ephemeris_diary):
  " unlet g:ephemeris_diary to test error handling
  unlet g:ephemeris_diary
  let b:copy_return = ephemeris#lst#copy_todos()
  AssertEqual 0, b:copy_return

Expect (the TODOs _NOT_ to be in the newly created buffer):
  
" " ^ leave two spaces to test blank buffer !


=====================
" does today exist
Execute (copy_todos to todays date after setting g:ephemeris_todos):
  let g:ephemeris_diary = '.tst_dir'
  call ephemeris#lst#copy_todos()
  Assert filereadable(ephemeris#fs#get_set_date(0))

Expect (the TODOs to be in the current test buffer):
  #TODOs
  - [ ] task 1


=====================
" Teardown

" remove test directories and assert that they are deleted
Execute (rm -rf tmp test dirs):
  execute 'silent! ! rm -rf .tst_dir'
  Assert ! isdirectory('.tst_dir')
