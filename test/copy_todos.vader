~ Test copy todos

" ephemeris#lst#copy_todos copies tasks from the last diary entry where the
" task marker `g:ephemeris_todos` is found. the function finds the most recent
" `g:ephemeris_todos` marker in the `g:ephemeris_diary` directory. The function
" stops copying when it finds `g:ephemeris_todos` marker, two consecutive
" newlines, or EOF. It should copy all todos blocks. 

Before (provide global variables to tests):
  let b:tst_dir = './.vader_test'
  let g:ephemeris_diary = b:tst_dir.'/tmp_diary'

# test copy_todos
" setup
Execute (make test dir and add a test buffer from a date in the past):
  let b:tst_exp_dir = expand(g:ephemeris_diary.'/2019/01')
  call mkdir(b:tst_exp_dir, 'p')
  Assert isdirectory(b:tst_exp_dir)

Execute (add TODOs to buffer):
  execute 'normal! ipre marker#TODOs- [ ] task 1'
  execute 'w '.b:tst_exp_dir.'/01.md' 

Expect (the TODOs to be in the buffer):
  pre marker
  #TODOs
  - [ ] task 1

Execute (save buffer as past date in tst_dir):
  Assert filereadable(b:tst_exp_dir.'/01.md')

Execute (copy_todos without a g:ephemeris_diary):
  " save g:ephemeris_diary
  let g:tmp_ephemeris_diary = g:ephemeris_diary
  " unlet g:ephemeris_diary to test error handling
  unlet g:ephemeris_diary
  let b:copy_return = ephemeris#lst#copy_todos()
  AssertEqual 0, b:copy_return

Expect (the TODOs _NOT_ to be in the newly created buffer):
  
" ^ leave two spaces to test blank buffer !

Execute (copy_todos to copy_todos after setting g:ephemeris_todos):
  let g:ephemeris_diary = g:tmp_ephemeris_diary
  call ephemeris#lst#copy_todos()
  Assert filereadable(ephemeris#fs#get_set_today())

Expect (the TODOs to be in the current test buffer):
  #TODOs
  - [ ] task 1


" Teardown

" remove test directories and assert that they are deleted
Execute (rm -rf tmp test dirs):
  execute '! rm -rf '.expand(b:tst_dir)
  Assert ! isdirectory(expand(b:tst_dir)),
  \ 'ephemeris tests Failed to delete test directory: '
  \ .b:tst_dir
